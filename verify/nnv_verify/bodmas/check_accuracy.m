%% Verify the model accuracy
% linear ~98%
% 4-25 ~98%
% 16-25 ~98%

disp("Running MALIMG analysis...");

% List of trained models
models = ["malware_bodmas_binary_scaled_none-2.onnx";
    "malware_bodmas_binary_scaled_4-2.onnx";
    "malware_bodmas_binary_scaled_16-2.onnx"];
numClasses = 2;

% Load feature analysis data
feature_info = readtable('../../../archive/bodmas-feature-analysis-NEW.csv');

% Load data
data = load('../../../archive/bodmas.mat');

% Let's start with a few images per class
X = data.X;
y = data.y;
y = y'; % transpose
y = y+1; % matlab predictions are 1 or 2 

% Scale the data-- > must be scaled!
X_scaled = zscore(X); % standard scaler equivalent

% Verify every model
for ms = 1:length(models)

    % Load model
    modelName = models(ms);
    saveName = split(modelName,'.');
    saveName = saveName{1};
    netonnx = importONNXNetwork("../../../models/bodmas/"+modelName, "InputDataFormats", "BC");
    disp("Running model:  "+saveName);

    predictedLabels = predict(netonnx, X_scaled);
    [~, predictedLabels] = max(predictedLabels, [], 2);
    wrong = 0;
    right = 0;
    for i = 1:length(predictedLabels)
        if predictedLabels(i) == y(i)
            right = right + 1;
        else
            wrong = wrong + 1;
        end
    end

    % Results
    disp("========  RESULTS ========");
    disp("");
    disp("Accuracy: "+string(right/(right + wrong)));
end

