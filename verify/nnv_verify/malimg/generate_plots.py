"""
Generate results plots for MALIMG dataset.
"""


import os
import scipy.io
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
import sys

sns.set_theme()

# plot template
# plt.rcParams['text.usetex'] = True
fs = 20

font = {'family' : 'serif',
        'serif':['Computer Modern'],
        'size'   : fs-4}

epsilons = [1/255, 2/255, 3/255]


def main():
    if os.path.exists("figures") == 0:
        os.mkdir("figures")
        
    models = ["linear-25", "4-25", "16-25"]
    # models = ["linear-25", "4-25"]
    get_name = lambda mod: f"results/robustness_results_malware_malimg_family_scaled_{mod}.mat"

    res = {}
    time = {}
    eps = epsilons
    #
    # Gather data
    #
    for m in models:
        # load data
        mat = scipy.io.loadmat(get_name(m))
        # load res, time keys
        r = mat["res"]
        t = mat["time"]
        
        res[m] = []
        time[m] = []
        
        for i in range(len(eps)):
            # result is the number == 1
            sat = [1 if val[i] == 1 else 0 for val in r]
            res[m].append(sum(sat))
            
            # time is the mean
            time[m].append(round(np.mean([val[i] for val in t]), 2))
    #
    # Create Plots
    #
    # Create the figure and axis objects for both plots
    NUM = len(r)
    fig1, ax1 = plt.subplots()
    fig2, ax2 = plt.subplots()
    fractions = [r'$\frac{'+str(val)+'}{255}$' for val in [1, 2, 3]]
    
    # Plot the time data
    for key, values in time.items():
        ax1.plot(eps, values, ".-", label=key)
    
    # Set title and labels for the time plot
    # ax1.set_title("Time Plot", fontsize=fs)
    ax1.set_xlabel("Perturbations $(\epsilon)$", fontsize=fs)
    ax1.set_ylabel("Time $(s)$", fontsize=fs)
    ax1.legend(loc="upper left", ncols=3, fontsize=fs-4)  # show legend
    ax1.tick_params(axis='x', labelsize=fs)
    ax1.tick_params(axis='y', labelsize=fs)
    ax1.set_xticks(epsilons, fractions)
    # ax1.set_ylim(0, 1.3)
    
    # Plot the res data
    for key, values in res.items():
        ax2.plot(eps, values, ".-", label=key)
    ax2.plot(eps, [NUM]*len(eps), "--", color="black", label="Total Samples")
    
    # Set title and labels for the res plot
    # ax2.set_title("Res Plot", fontsize=fs)
    ax2.set_xlabel("Perturbations $(\epsilon)$", fontsize=fs)
    ax2.set_ylabel("SAT", fontsize=fs)
    ax2.legend(loc='lower left', ncols=2, fontsize=fs-4)  # show legend
    ax2.tick_params(axis='x', labelsize=fs)
    ax2.tick_params(axis='y', labelsize=fs)
    ax2.set_ylim(0, NUM+5)
    ax2.set_xticks(epsilons, fractions)

    
    fig1.savefig(f"figures/Fig_8b.pdf", bbox_inches='tight')
    fig2.savefig(f"figures/Fig_8a.pdf", bbox_inches='tight')
    # Show the plots
    # plt.show()
    # print("\nFinished. All plots saved to: figures/")
            
if __name__ == "__main__":
    main()
        
    
